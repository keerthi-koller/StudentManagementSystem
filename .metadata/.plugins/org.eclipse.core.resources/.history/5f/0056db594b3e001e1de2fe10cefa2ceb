package com.jsp.employeemanagementsystem.serviceimpl;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import com.jsp.employeemanagementsystem.dto.EmployeeRequest;
import com.jsp.employeemanagementsystem.dto.EmployeeResponse;
import com.jsp.employeemanagementsystem.entity.Employee;
import com.jsp.employeemanagementsystem.exception.EmployeeNotFoundByIdException;
import com.jsp.employeemanagementsystem.repository.EmployeeRepo;
import com.jsp.employeemanagementsystem.service.EmployeeService;
import com.jsp.employeemanagementsystem.util.ResponseStructure;

@Service
public class EmployeeServiceImpl implements EmployeeService {

	@Autowired
	private EmployeeRepo employeeRepo;

	@Override
	public ResponseEntity<ResponseStructure<EmployeeResponse>> saveEmployee(EmployeeRequest employeeRequest) {
				
		Employee employee = new Employee();
		
		employee.setEmpFirstName(employeeRequest.getEmpFirstName());
		employee.setEmpLastName(employeeRequest.getEmpLastName());
		employee.setEmpPhNo(employeeRequest.getEmpPhNo());
		employee.setEmpEmail(employeeRequest.getEmpEmail());
		employee.setEmpPwd(employeeRequest.getEmpPwd());
		employee.setEmpSal(employeeRequest.getEmpSal());
		employee.setLocalDateTime(LocalDateTime.now());
		
		employee = employeeRepo.save(employee);
		
		EmployeeResponse employeeResponse = new EmployeeResponse();
		
		employeeResponse.setEmpId(employee.getEmpId());
		employeeResponse.setEmpFirstName(employee.getEmpFirstName());
		employeeResponse.setEmpLastName(employee.getEmpLastName());
		employeeResponse.setEmpEmail(employee.getEmpEmail());
		employeeResponse.setEmpPhNo(employee.getEmpPhNo());
		employeeResponse.setLocalDateTime(employee.getLocalDateTime());
		
		ResponseStructure<EmployeeResponse> structure = new ResponseStructure<EmployeeResponse>();
		
		structure.setStatus(HttpStatus.CREATED.value());
		structure.setMessage("Employee data saved successfully !!!");
		structure.setData(employeeResponse);
		
		return new ResponseEntity<ResponseStructure<EmployeeResponse>> (structure, HttpStatus.CREATED);
		
	}

	@Override
	public ResponseEntity<ResponseStructure<EmployeeResponse>> updateEmployee(EmployeeRequest employeeRequest,
			int empId) {
		
		Optional<Employee> optional = employeeRepo.findById(empId);
		
		Employee employee1 = new Employee();

		
		if (optional.isPresent())
		{
			Employee employee = optional.get();
			
			employee1.setEmpId(employee.getEmpId());
			employee1.setEmpFirstName(employeeRequest.getEmpFirstName());
			employee1.setEmpLastName(employeeRequest.getEmpLastName());
			employee1.setEmpPhNo(employeeRequest.getEmpPhNo());
			employee1.setEmpEmail(employeeRequest.getEmpEmail());
			employee1.setEmpPwd(employeeRequest.getEmpPwd());
			employee1.setEmpSal(employeeRequest.getEmpSal());
			employee1.setLocalDateTime(LocalDateTime.now());
			
			employee = employeeRepo.save(employee1);
			
			EmployeeResponse employeeResponse = new EmployeeResponse();
			
			employeeResponse.setEmpId(employee.getEmpId());
			employeeResponse.setEmpFirstName(employee.getEmpFirstName());
			employeeResponse.setEmpLastName(employee.getEmpLastName());
			employeeResponse.setEmpPhNo(employee.getEmpPhNo());
			employeeResponse.setEmpEmail(employee.getEmpEmail());
			employeeResponse.setLocalDateTime(employee.getLocalDateTime());
			
			ResponseStructure<EmployeeResponse> structure = new ResponseStructure<EmployeeResponse>();
			
			structure.setStatus(HttpStatus.ACCEPTED.value());
			structure.setMessage("Employee data updated successfully !!");
			structure.setData(employeeResponse);
			
			return new ResponseEntity<ResponseStructure<EmployeeResponse>> (structure, HttpStatus.ACCEPTED);
			
		}
		else
		{
			throw new EmployeeNotFoundByIdException ("Employee Not Found BY this Id...!!");
		}
	}

	@Override
	public ResponseEntity<ResponseStructure<EmployeeResponse>> deleteEmployee(EmployeeRequest employeeRequest) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ResponseEntity<ResponseStructure<EmployeeResponse>> findEmployeeByEmpId(int empId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ResponseEntity<ResponseStructure<List<EmployeeResponse>>> findAllEmployees() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ResponseEntity<ResponseStructure<EmployeeResponse>> findEmployeeByEmpEmail(String empEmail) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ResponseEntity<ResponseStructure<EmployeeResponse>> findEmployeeByEmpPhNo(long empPhNo) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ResponseEntity<ResponseStructure<List<EmployeeResponse>>> getAllEmployeeByEmpSal(double empSal) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<String> getAllEmpEmailsByLocalDateTime(LocalDateTime localDateTime) {
		// TODO Auto-generated method stub
		return null;
	}

}
